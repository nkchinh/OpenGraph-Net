<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OpenGraph-Net</name>
    </assembly>
    <members>
        <member name="T:OpenGraph_Net.InvalidSpecificationException">
            <summary>
            An invalid specification exception
            </summary>
        </member>
        <member name="M:OpenGraph_Net.InvalidSpecificationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenGraph_Net.InvalidSpecificationException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="T:OpenGraph_Net.OpenGraph">
            <summary>
            Represents Open Graph meta data parsed from HTML
            </summary>
        </member>
        <member name="F:OpenGraph_Net.OpenGraph.RequiredMeta">
            <summary>
            The required meta
            </summary>
        </member>
        <member name="F:OpenGraph_Net.OpenGraph.BaseTypes">
            <summary>
            The base types
            </summary>
        </member>
        <member name="F:OpenGraph_Net.OpenGraph.openGraphData">
            <summary>
            The open graph data
            </summary>
        </member>
        <member name="F:OpenGraph_Net.OpenGraph.localAlternatives">
            <summary>
            The local alternatives
            </summary>
        </member>
        <member name="M:OpenGraph_Net.OpenGraph.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:OpenGraph_Net.OpenGraph"/> class from being created.
            </summary>
        </member>
        <member name="M:OpenGraph_Net.OpenGraph.MakeGraph(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            Makes the graph.
            </summary>
            <param name="title">The title.</param>
            <param name="type">The type.</param>
            <param name="image">The image.</param>
            <param name="url">The URL.</param>
            <param name="description">The description.</param>
            <param name="siteName">Name of the site.</param>
            <param name="audio">The audio.</param>
            <param name="video">The video.</param>
            <param name="locale">The locale.</param>
            <param name="localeAlternate">The locale alternate.</param>
            <param name="determiner">The determiner.</param>
            <returns><see cref="T:OpenGraph_Net.OpenGraph"/></returns>
        </member>
        <member name="M:OpenGraph_Net.OpenGraph.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:OpenGraph_Net.OpenGraph.ParseUrl(System.String,System.String,System.Boolean)">
            <summary>
            Downloads the HTML of the specified URL and parses it for open graph content.
            </summary>
            <param name="url">The URL to download the HTML from.</param>
            <param name="userAgent">The user agent to use when downloading content.  The default is <c>"facebookexternalhit"</c> which is required for some site (like amazon) to include open graph data.</param>
            <param name="validateSpecifiction">if set to <c>true</c> <see cref="T:OpenGraph_Net.OpenGraph"/> will validate against the specification.</param>
            <returns>
              <see cref="T:OpenGraph_Net.OpenGraph"/>
            </returns>
        </member>
        <member name="M:OpenGraph_Net.OpenGraph.ParseUrl(System.Uri,System.String,System.Boolean)">
            <summary>
            Downloads the HTML of the specified URL and parses it for open graph content.
            </summary>
            <param name="url">The URL to download the HTML from.</param>
            <param name="userAgent">The user agent to use when downloading content.  The default is <c>"facebookexternalhit"</c> which is required for some site (like amazon) to include open graph data.</param>
            <param name="validateSpecification">if set to <c>true</c> verify that the document meets the required attributes of the open graph specification.</param>
            <returns><see cref="T:OpenGraph_Net.OpenGraph"/></returns>
        </member>
        <member name="M:OpenGraph_Net.OpenGraph.ParseHtml(System.String,System.Boolean)">
            <summary>
            Parses the HTML for open graph content.
            </summary>
            <param name="content">The HTML to parse.</param>
            <param name="validateSpecification">if set to <c>true</c> verify that the document meets the required attributes of the open graph specification.</param>
            <returns><see cref="T:OpenGraph_Net.OpenGraph"/></returns>
        </member>
        <member name="M:OpenGraph_Net.OpenGraph.ParseHtml(OpenGraph_Net.OpenGraph,System.String,System.Boolean)">
            <summary>
            Parses the HTML.
            </summary>
            <param name="result">The result.</param>
            <param name="content">The content.</param>
            <param name="validateSpecification">if set to <c>true</c> [validate specification].</param>
            <returns><see cref="T:OpenGraph_Net.OpenGraph"/></returns>
            <exception cref="T:OpenGraph_Net.InvalidSpecificationException">The parsed HTML does not meet the open graph specification</exception>
        </member>
        <member name="M:OpenGraph_Net.OpenGraph.GetOpenGraphKey(HtmlAgilityPack.HtmlNode)">
            <summary>
            Gets the open graph key.
            </summary>
            <param name="metaTag">The meta tag.</param>
            <returns>Returns the key stored from the meta tag</returns>
        </member>
        <member name="M:OpenGraph_Net.OpenGraph.CleanOpenGraphKey(System.String)">
            <summary>
            Cleans the open graph key.
            </summary>
            <param name="value">The value.</param>
            <returns>strips the <c>og:</c> namespace from the value</returns>
        </member>
        <member name="M:OpenGraph_Net.OpenGraph.GetOpenGraphValue(HtmlAgilityPack.HtmlNode)">
            <summary>
            Gets the open graph value.
            </summary>
            <param name="metaTag">The meta tag.</param>
            <returns>Returns the value from the meta tag</returns>
        </member>
        <member name="M:OpenGraph_Net.OpenGraph.Add(System.String,System.String)">
            <summary>
            Adds the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <exception cref="T:OpenGraph_Net.ReadOnlyDictionaryException">Cannot change a read only dictionary</exception>
        </member>
        <member name="M:OpenGraph_Net.OpenGraph.ContainsKey(System.String)">
            <summary>
            Determines whether the specified key contains key.
            </summary>
            <param name="key">The key.</param>
            <returns>
              <c>true</c> if the specified key contains key; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:OpenGraph_Net.OpenGraph.Remove(System.String)">
            <summary>
            Removes the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns><c>false</c></returns>
            <exception cref="T:OpenGraph_Net.ReadOnlyDictionaryException">Cannot change a read only dictionary</exception>
        </member>
        <member name="M:OpenGraph_Net.OpenGraph.TryGetValue(System.String,System.String@)">
            <summary>
            Tries the get value.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns>true if the value was successfully set; otherwise false</returns>
        </member>
        <member name="M:OpenGraph_Net.OpenGraph.Add(System.Collections.Generic.KeyValuePair{System.String,System.String})">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The item.</param>
            <exception cref="T:OpenGraph_Net.ReadOnlyDictionaryException">Cannot change a read only dictionary</exception>
        </member>
        <member name="M:OpenGraph_Net.OpenGraph.Clear">
            <summary>
            Clears this instance.
            </summary>
            <exception cref="T:OpenGraph_Net.ReadOnlyDictionaryException">Cannot change a read only dictionary</exception>
        </member>
        <member name="M:OpenGraph_Net.OpenGraph.Contains(System.Collections.Generic.KeyValuePair{System.String,System.String})">
            <summary>
            Determines whether [contains] [the specified item].
            </summary>
            <param name="item">The item.</param>
            <returns>
              <c>true</c> if [contains] [the specified item]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:OpenGraph_Net.OpenGraph.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.String}[],System.Int32)">
            <summary>
            Copies to.
            </summary>
            <param name="array">The array.</param>
            <param name="arrayIndex">Index of the array.</param>
        </member>
        <member name="M:OpenGraph_Net.OpenGraph.Remove(System.Collections.Generic.KeyValuePair{System.String,System.String})">
            <summary>
            Removes the specified item.
            </summary>
            <param name="item">The item.</param>
            <returns>Returns false</returns>
            <exception cref="T:OpenGraph_Net.ReadOnlyDictionaryException">Cannot change a read only dictionary</exception>
        </member>
        <member name="M:OpenGraph_Net.OpenGraph.GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
            <returns>The enumerator for the key value pairs</returns>
        </member>
        <member name="M:OpenGraph_Net.OpenGraph.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:OpenGraph_Net.OpenGraph.Type">
            <summary>
            Gets the type.
            </summary>
            <value>The type of open graph document.</value>
        </member>
        <member name="P:OpenGraph_Net.OpenGraph.Title">
            <summary>
            Gets the title of the open graph document.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:OpenGraph_Net.OpenGraph.Image">
            <summary>
            Gets the image for the open graph document.
            </summary>
            <value>The image.</value>
        </member>
        <member name="P:OpenGraph_Net.OpenGraph.Url">
            <summary>
            Gets the URL for the open graph document
            </summary>
            <value>The URL.</value>
        </member>
        <member name="P:OpenGraph_Net.OpenGraph.OriginalUrl">
            <summary>
            Gets the original URL used to generate this graph
            </summary>
            <value>The original URL.</value>
        </member>
        <member name="P:OpenGraph_Net.OpenGraph.Keys">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
        </member>
        <member name="P:OpenGraph_Net.OpenGraph.Values">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
        </member>
        <member name="P:OpenGraph_Net.OpenGraph.Item(System.String)">
            <summary>
            Gets or sets the element with the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns>returns the open graph value at the specified key</returns>
            <exception cref="T:OpenGraph_Net.ReadOnlyDictionaryException">Cannot modify a read-only collection</exception>
        </member>
        <member name="P:OpenGraph_Net.OpenGraph.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <returns>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
        </member>
        <member name="P:OpenGraph_Net.OpenGraph.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
            <returns>true</returns>
        </member>
        <member name="T:OpenGraph_Net.ReadOnlyDictionaryException">
            <summary>
            Read-only dictionary exception
            </summary>
        </member>
    </members>
</doc>
